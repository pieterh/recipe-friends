@using RecipeFriends.Components.FileDropZone

<MudElement>
    <MudGrid Justify="Justify.FlexStart">
        @foreach(var image in ImagesToShow)
        {   
            <MudItem xs="3">
                <MudImage Src="@GetDataURL(image.Name, image.Data)" Alt="@image.Title" Elevation="25" Class="rounded-lg" style="max-height:200px;max-width:200px;height:auto;width:auto;" />
            </MudItem>
        }
        <MudItem xs="3">
            <FileDropZone OnFileAdded="HandleFileAdded"></FileDropZone>
        </MudItem>
    </MudGrid>
</MudElement>

@code {
    [Parameter] public List<ImageData> ImagesToShow { get; set; }
    [Parameter] public EventCallback<IBrowserFile> OnFileAdded { get; set; }

    private async Task HandleFileAdded(IBrowserFile file)
    {
        await OnFileAdded.InvokeAsync(file);

        // we are in an event and changing data. Notify that the state is changed and the UI will be redrawn properly
        StateHasChanged();
    }

    public static string GetDataURL(string fileName, byte[] imgData)
    {
        return "data:image" 
                    + Path.GetExtension(fileName).Replace(".","").ToLower()
                    + ";base64," 
                    + Convert.ToBase64String(imgData);
    }
}
