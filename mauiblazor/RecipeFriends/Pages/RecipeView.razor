@page "/recipe/view/{Id:int}"
@using RecipeFriends.Shared.DTO
@using RecipeFriends.Data
@using RecipeFriends.Services
@inject IRecipeService RecipeService
@inject IDocumentService DocumentService
@inject NavigationManager NavigationManager

<MudDialog>
    <DialogContent >

@if (string.IsNullOrEmpty(recipeMarkDown))
{
    <p><em>Loading...</em></p>
}
else
{
    <MudMarkdown Value="@recipeMarkDown" />
}
</DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="Close">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public int Id { get; set; }

    void Close() => MudDialog.Close(DialogResult.Ok(true));

    private string recipeMarkDown = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        recipeMarkDown = await DocumentService.RecipeToMarkdownAsync(Id, CancellationToken.None).ConfigureAwait(true);
        Console.WriteLine(recipeMarkDown);
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/recipe/list");
    }
}
