@page "/recipe/edit/{Id:int}"
@using RecipeFriends.Shared.DTO.v1
@using RecipeFriends.Data
@using RecipeFriends.Services
@inject IRecipeService RecipeService
@inject NavigationManager NavigationManager

@if (recipeDetails == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="recipeDetails" OnValidSubmit="HandleValidSubmit">
        <h3>Edit Recipe</h3>
        <DataAnnotationsValidator />
        <ValidationSummary />
        <hr />
        <div class="form-group row custom-row-spacing">
            <label for="title" class="col-sm-2 col-form-label">
                Title
            </label>
            <div class="col-sm-10">
                <InputText id="title" class="form-control" @bind-Value="recipeDetails.Title" />
            </div>
        </div>
        <div class="form-group row custom-row-spacing">
            <label for="catagory" class="col-sm-2 col-form-label">
                Categorie
            </label>
            <div class="col-sm-10">
                <InputSelect id="catagory" class="form-control" TValue="Data.Models.Catagories" @bind-Value="recipeDetails.Catagory">
                    @foreach (var cat in Enum.GetValues<Data.Models.Catagories>())
                    {
                        <option value="@cat">@cat</option>
                    }
                </InputSelect>
            </div>
        </div>
        <div class="form-group row custom-row-spacing">
            <div class="col-md-2">
                <label for="shortDescription" class="d-inline-block float-md-right col-form-label">
                    Short description
                </label>
            </div>
            <div class="col-md-10">
                <InputText id="shortDescription" class="form-control" @bind-Value="recipeDetails.ShortDescription" />
            </div>
        </div>
        <div class="form-group row custom-row-spacing">
            <label for="description" class="col-sm-2 col-form-label">
                Description
            </label>
            <div class="col-sm-10">
                <InputTextArea id="description" class="form-control" @bind-Value="recipeDetails.Description" />
            </div>
        </div>
        <div class="form-group row custom-row-spacing">
            <label for="directions" class="col-sm-2 col-form-label">
                Directions
            </label>
            <div class="col-sm-10 directions-textarea">
                <InputTextArea id="directions" class="form-control " style="height: 100%" @bind-Value="recipeDetails.Directions" />
            </div>
        </div>
        @*<InputText id="preparationTime" @bind-Value="recipeDetails.PreparationTime" />
            <InputText id="cookingTime" @bind-Value="recipeDetails.CookingTime" />*@
        <!-- For Tags, you can use some other UI element like checkbox list, multi-select etc -->
        <div class="form-group row">
            <div class="col-sm-12">
                <button type="submit">Update</button>
            </div>
        </div>

    </EditForm>

    @if (!string.IsNullOrEmpty(saveStatusMessage))
    {
        <div class="alert alert-info">
            @saveStatusMessage
        </div>
    }

}

@code {
    [Parameter] public int Id { get; set; }

    private RecipeDetails? recipeDetails;
    private string saveStatusMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        recipeDetails = await RecipeService.GetRecipeDetailsAsync(Id, CancellationToken.None);
    }

    private async Task HandleValidSubmit()
    {
        if (recipeDetails != null)
        {
            bool success = await RecipeService.SaveRecipeDetailsAsync(recipeDetails, CancellationToken.None);

            if (success)
            {
                // Update is successful, navigate to some other page or show success message
                saveStatusMessage = "Successfully saved.";
                NavigationManager.NavigateTo("/recipe/list");
            }
            else
            {
                // Show error message
                saveStatusMessage = "Failed to save.";
            }
        }
    }
}
